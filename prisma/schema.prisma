// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  bookmarks     Bookmark[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Recipe {
  id               String        @id @default(cuid())
  name             String
  country          String
  cookTimeMinutes  Int           @default(10)
  description      String        @default("")
  instructions     Instruction[]
  originalVideoUrl String
  prepTimeMinutes  Int           @default(10)
  tags             Tag[]
  thumbnailUrl     String
  topics           Topic[]
  userRatings      UserRating[]
  bookmarks        Bookmark[]
}

model Instruction {
  id          String  @id @default(cuid())
  startTime   Int     @default(0)
  appliance   String  @default("")
  endTime     Int     @default(0)
  temperature Int     @default(0)
  displayText String
  position    Int
  recipe      Recipe? @relation(fields: [recipeId], references: [id])
  recipeId    String?
}

model Tag {
  id          String  @id @default(cuid())
  type        String  @default("")
  name        String  @default("")
  displayName String  @default("")
  recipe      Recipe? @relation(fields: [recipeId], references: [id])
  recipeId    String?
}

model Topic {
  id       String  @id @default(cuid())
  slug     String
  name     String
  recipe   Recipe? @relation(fields: [recipeId], references: [id])
  recipeId String?
}

model UserRating {
  id            String  @id @default(cuid())
  countPositive Int
  countNegative Int
  score         Float
  recipe        Recipe? @relation(fields: [recipeId], references: [id])
  recipeId      String?
}

model Bookmark {
  id        String   @id @default(cuid())
  recipe    Recipe?  @relation(fields: [recipeId], references: [id])
  recipeId  String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
